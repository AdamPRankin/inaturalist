- content_for :extrajs do
  = javascript_include_tag "angular_bundle"
  :javascript
    var ICONIC_TAXA = #{Taxon::ICONIC_TAXA_BY_ID.to_json};
  = javascript_include_tag "ang/controllers/observation_search"
- content_for :extracss do
  = stylesheet_link_tag "observations/search_prototype"
- content_for :extrahead do
  %base{ href: search_prototype_observations_path }
#main-container{ "ng-app": "ObservationSearch", "ng-controller": "SearchController" }
  .container.container-fixed
    .row.form
      .col-xs-12
        #filters.clear
          %h1= t :observations
          #filter-container.btn-group.pull-right
            %button.btn.btn-default.dropdown-toggle
              %i.fa.fa-filter
              %i.fa.fa-chevron-down
            .dropdown-menu.dropdown-menu-right{"ng-include": "'ang/templates/observation_search/filter_menu.html'", onload: "onFiltersLoad()"}
          .form-inline.pull-right.primary-filters
            %input.form-control{ placeholder: t(:species), type: "search", name: "taxon_name" }
            %input{ type: "hidden", name: "taxon_id" }
            %span=t :in
            / ng-model-options="{debounce: 1000}" means angular will wait 1000 ms after the last change in the UI before changing the bound model value
            / g-places-autocomplete triggers the Google place autocomplete directive
            #place-name-input.input-group
              %input#place_name.form-control{ name: "place_name", placeholder: t(:place), type: "text", "ng-model": "placeSearch" }
              %span.input-group-btn
                %button.btn.btn-default{ type: "button", "ng-click": "focusOnSearchedPlace( )" }= t(:go)
  #stats-container
    .container.container-fixed
      .row
        .col-xs-4
          %span.geo{ "ng-if": "!selectedPlace && !params.swlng" }
            The World
          %span.geo.selected.ng-cloak{ "ng-if": "selectedPlace", "ng-click": "removeSelectedPlace( )" }
            = "{{ selectedPlace.name }}"
            %span.glyphicon.glyphicon-remove-sign
          %span.geo.selected.ng-cloak{ "ng-if": "params.swlng", "ng-click": "removeSelectedBounds( )" }
            Bounding Box
            %span.glyphicon.glyphicon-remove-sign
        #obsstatcol.col-xs-2.statcol{ "ng-class": "{ active: viewing('observations') }", "ng-click": "changeView('observations')" }
          .stat
            .stat-title.ng-cloak= t(:observations)
            .stat-value.ng-cloak= "{{ shared.numberWithCommas( totalObservations ) }}"
        .col-xs-2.statcol{ "ng-class": "{ active: viewing('species') }", "ng-click": "changeView('species')" }
          .stat
            .stat-title.ng-cloak= t(:species)
            .stat-value.ng-cloak= "{{ shared.numberWithCommas( totalSpecies ) }}"
        .col-xs-2.statcol{ "ng-class": "{ active: viewing('identifiers') }", "ng-click": "changeView('identifiers')" }
          .stat
            .stat-title.ng-cloak= t(:identifiers)
            .stat-value.ng-cloak= "{{ shared.numberWithCommas( totalIdentifiers ) }}"
        .col-xs-2.statcol{ "ng-class": "{ active: viewing('observers') }", "ng-click": "changeView('observers')" }
          .stat
            .stat-title.ng-cloak= t(:observers)
            .stat-value.ng-cloak= "{{ shared.numberWithCommas( totalObservers ) }}"
  #results
    .container.container-fixed.ng-cloak{ "ng-show": "viewing('observations')" }
      .row
        .col-xs-6
          .btn-group
            %button.button.btn-default{ "ng-click": "changeView('observations', 'map')", title: "{{ shared.t('map') }}" }
              %span.glyphicon.glyphicon-map-marker{ "aria-hidden": "true" }
            %button.button.btn-default{ "ng-click": "changeView('observations', 'grid')", title: "{{ shared.t('grid') }}" }
              %span.glyphicon.glyphicon-th{ "aria-hidden": "true" }
            %button.button.btn-default{ "ng-click": "changeView('observations', 'table')", title: "{{ shared.t('table') }}" }
              %span.glyphicon.glyphicon-menu-hamburger{ "aria-hidden": "true" }
            %button.button.btn-default.reload.dropdown-toggle{ "data-toggle": "dropdown", "ng-show": "viewing('observations', 'map')" }
              Places of Interest
            .dropdown-menu.dropdown-menu-right.places
              .col-xs-6
                %h4 Standard
                %h4 Recent
              .col-xs-6
                %h4 Nearby
                .place{ "ng-repeat": "p in nearbyPlaces" }
                  %span{ "ng-click": "filterByPlace( p )", "ng-mouseover": "showNearbyPlace( p )",  "ng-mouseleave": "hideNearbyPlace( p )" }
                    = "{{ p.name }}"
            %button.button.btn-default.reload{ "ng-click": "filterByBounds( )", "ng-show": "viewing('observations', 'map') && !justSelectedLocation" }
              %span.glyphicon.glyphicon-repeat{ "aria-hidden": "true" }
              Redo Search in Map
        .col-xs-6
    %div#observations-map{ "results-map": true, "ng-show": "viewing('observations', 'map')", "ng-controller": "MapController" }
    %div{ "results-grid": true, "ng-show": "viewing('observations', 'grid')" }
      %div{ "ng-include": "'ang/templates/observation_search/results_grid.html'"}
    %div{ "results-table": true, "ng-show": "viewing('observations', 'table')" }
      %div{ "ng-include": "'ang/templates/observation_search/results_table.html'"}
    %div{ "taxa-grid": true, "ng-show": "viewing('species')" }
      %div{ "ng-include": "'ang/templates/observation_search/taxa_grid.html'"}
    %div{ "ng-show": "viewing('identifiers')" }
      %div{ "ng-include": "'ang/templates/observation_search/identifiers_table.html'" }
    %div{ "ng-show": "viewing('observers')" }
      %div{ "ng-include": "'ang/templates/observation_search/observers_table.html'"}
