#filter-dropdown.container
  .row
    .col-xs-6
      .row
        .col-xs-6
          .checkbox
            %label
              %input{type: 'checkbox', "ng-model" => "params.captive", "ng-true-value" => "false", "ng-false-value" => ""}
              =t :wild
          .checkbox
            %label
              %input{type: 'checkbox', "ng-model" => "params.verifiable", "ng-false-value" => ""}
              =t :verifiable
          .checkbox
            %label
              %input{type: 'checkbox', value: 'research', "ng-model" => "params.quality_grade", "ng-true-value" => "'research'", "ng-false-value": "" }
              =t :research_quality
          .checkbox
            %label
              %input{type: 'checkbox', "ng-model" => "params.threatened", "ng-false-value" => ""}
              =t :threatened
        .col-xs-6
          .checkbox
            %label
              %input{type: 'checkbox', "ng-model" => "params.introduced", "ng-false-value" => ""}
              =t :introduced
          .checkbox
            %label
              %input{type: 'checkbox', "ng-model" => "params.popular", "ng-false-value" => ""}
              =t :popular
          .checkbox
            %label
              %input{type: 'checkbox', disabled: true}
              =t :first_report
          .checkbox
            %label
              %input{type: 'checkbox', "ng-model" => "params.has_sounds", "ng-false-value" => ""}
              =t :has_sounds
          .checkbox
            %label
              %input{type: 'checkbox', "ng-model" => "params.has_photos", "ng-false-value" => ""}
              =t :has_photos
      .row
        .col-xs-12
          .form-group
            %label{for: 'params-q'} Description / Tags
            %input#params-q.form-control{"ng-model" => "params.q", "ng-model-options" => "{debounce: 1000}", placeholder: "blue, butterfly, etc."}
    .col-xs-6
      .row
        .col-xs-12
          - Taxon::ICONIC_TAXA.each do |t|
            %label
              %input{type: 'checkbox', "ng-model" => "params._iconic_taxa.#{t.name}", :value => t.name}
              = t.name
      .row
        .col-xs-12
          %label{for: 'params-hrank'}=t :rank
      .row
        .col-xs-6
          %select#params-hrank.form-control{"ng-model" => "params.hrank", "ng-model-options" => "{debounce: 1000}"}
            %option{value: ''}=t :high
            - for rank in Taxon::VISIBLE_RANKS
              %option{value: rank}= I18n.t("ranks.#{rank}", :default => rank).downcase
        .col-xs-6
          %select#params-lrank.form-control{"ng-model" => "params.lrank", "ng-model-options" => "{debounce: 1000}"}
            %option{value: ''}=t :low
            - for rank in Taxon::VISIBLE_RANKS
              %option{value: rank}= I18n.t("ranks.#{rank}", :default => rank).downcase
      .row
        .col-xs-12
          %label{for: 'params-order-by'}=t :sort_by
      .row
        .col-xs-6
          %select#params-order-by.form-control{"ng-model" => "params.order_by", "ng-model-options" => "{debounce: 1000}"}
            = FakeView.observations_order_by_options
        .col-xs-6
          %select#params-order.form-control{"ng-model" => "params.order", "ng-model-options" => "{debounce: 1000}"}
            = FakeView.options_for_select(%w(asc desc).map{|o|I18n.t(o)}, @order)
  .row
    .col-xs-12
      %button.button.btn-default{type: 'button', data: {toggle: 'collapse', target: '#more-filters'}, "aria-expanded" => "false", "aria-controls" => "more-filters"}
        =t :more_filters
      %button.button.btn-default{ type: 'button', "ng-click": "reset( )" }
        =t :clear
      #more-filters.collapse
        .row
          .col-xs-6
            .form-group
              %label{for: 'params-user-id'} Person
              %input#params-user-id.form-control{"ng-model" => "params.user_id", "ng-model-options" => "{debounce: 1000}", placeholder: "Name or username"}
            .form-group
              %label{for: 'params-projects'} Project
              %input#params-projects.form-control{"ng-model" => "params.projects", "ng-model-options" => "{debounce: 1000}", placeholder: "Project name"}
            .form-group
              %label Photo licensing
              %select.form-control{"ng-model" => "params.photo_license"}
                %option{value: ''}=t :all
                - for code, name, desc in Observation::LICENSES do
                  %option{value: code}= code
          .col-xs-6
            .form-group
              %label Location data
              %br
              Restrict results to
              %br
              %label.radio-inline
                %input{type: 'radio', name: 'geo-type', value: 'place', "ng-model" => "params.geoType"}
                =t :places
              %label.radio-inline
                %input{type: 'radio', name: 'geo-type', value: 'map', "ng-model" => "params.geoType"}
                =t :map_view
              %label.radio-inline
                %input{type: 'radio', name: 'geo-type', value: 'world', "ng-model" => "params.geoType"}
                =t :worldwide
            .form-group
              %label=t :dates
              %br
              %label.radio-inline
                %input{type: 'radio', name: 'date-type', value: 'any', "ng-model" => "params.dateType"}
                  =t :any
              %label.radio-inline
                %input{type: 'radio', name: 'date-type', value: 'exact', "ng-model" => "params.dateType"}
                %span.date-type
                  Exact date:
                  %input{type: 'text', placeholder: 'YYYY-MM-DD', "ng-model" => "params.on", "ng-disabled" => "params.dateType != 'exact'"}
              %label.radio-inline
                %input{type: 'radio', name: 'date-type', value: 'range', "ng-model" => "params.dateType"}
                %span.date-type
                  Range:
                  %input{type: 'text', placeholder: 'Start', "ng-model" => "params.d1", "ng-disabled" => "params.dateType != 'range'"}
                  %input{type: 'text', placeholder: 'End', "ng-model" => "params.d2", "ng-disabled" => "params.dateType != 'range'"}
              %label.radio-inline
                %input{type: 'radio', name: 'date-type', value: 'month', "ng-model" => "params.dateType"}
                %span.date-type
                  Month(s):
                  = FakeView.select_tag :month, FakeView.options_for_select([[t(:month), '']] + (1..12).to_a.map{|n| [t("date_format.month.#{Date::MONTHNAMES[n].downcase}"),n]}, :selected => @observed_on_month), "ng-model" => "params.month", "ng-disabled" => "params.dateType != 'month'"
