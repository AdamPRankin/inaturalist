- content_for :title do
  = @title = t(:editing_this, :elem => @guide.title)
- content_for :extracss do
  = stylesheet_link_tag "guides"
  :css
    input.position {width:1em;}
    .more {display:none;}
    .guide_taxon .check, .guide_taxon .names {padding:4px 6px;}
    .guide_taxon .img-circle {max-width:30px; height:30px;}
    .names .display_name {font-size:140%;}
    .grip {
      width:10px;
      height:2.5em;
      background: url(/images/dotted.gif);
      vertical-align: middle;
      cursor: move;
    }
    .bootstrap form.edit_guide_taxon {margin-bottom:0;}
    .bootstrap .ctrl input {margin-bottom:0;}
    #addtaxa input {width:400px;}
    #addtaxa-single .ui-chooser {margin-bottom: 10px;}
    #controls .navbar .btn,
    #controls .navbar .navbar-search,
    #controls .navbar .btn-group {margin-top:0;}
    #controls .navbar .navbar-search input {margin-bottom:0;}
    #controls.affix {top:0px; z-index: 1;}
    #controls.affix .navbar {box-shadow: #777 7px 0 10px; padding:10px 0 10px 0; background-color:white;}
    #controls .pull-left {margin-right:10px;}
    .guide_taxon.warning { background-color: #fcf8e3;}
    .guide_taxon {margin-bottom:0;padding-top:10px;}
    .sorttarget { height: 50px;}
    #map { height: 200px;}
    .bootstrap select, .bootstrap input[type="file"] {line-height: 0;}
    #guide_description {height:300px;}
    #new_guide_eol_update_flow_task {margin-bottom:0;}
    .icon-tag.strike{position:relative;}
    .icon-tag.strike:after {
      content: ' '; width:100%; height:0.5em; border-bottom: 3px solid white; position: absolute; display: block; top:0; left:-0.25em; 
      -webkit-transform: rotate(-45deg);
      -moz-transform: rotate(-45deg);
    }
    .bootstrap .accordion-inner {min-width: 220px;}
    #addtaxa-paste textarea {height:200px;}
- content_for :extrajs do
  :javascript
    var GUIDE = #{raw @guide.to_json},
        PLACE = #{raw @guide.place.to_json}
  = javascript_include_tag 'jquery/plugins/jquery.labelize', 'jquery/plugins/jquery.latLonSelector', 'guides/edit'
.container-fluid
  %ul.breadcrumb
    %li
      = link_to t(:back_to_x, :noun => @guide.title), @guide, :class => "back"

  %h1= @title

  .row-fluid
    .span3
      = form_for @guide, :builder => DefaultFormBuilder do |f|
        #guide_accordion.accordion
          .accordion-group
            .accordion-heading
              %a.accordion-toggle{"data-parent" => "#guide_accordion", "data-toggle" => "collapse", :href => "#title_and_desc"}
                %label=t :title_and_description
              #title_and_desc.accordion-body.collapse.in
                .accordion-inner
                  = f.text_field :title, :placeholder => t(:title), :class => "span12", :label => false
                  = f.text_area :description, :placeholder => t(:description), :class => "span12", :label => false
          .accordion-group
            .accordion-heading
              %a.accordion-toggle{"data-parent" => "#guide_accordion", "data-toggle" => "collapse", :href => "#icon"}
                %label=t :icon
              #icon.accordion-body.collapse
                .accordion-inner
                  - if @guide.icon.file?
                    = image_tag(@guide.icon.url(:thumb), :class => "left")
                    %div
                      = check_box_tag :icon_delete
                      %label{:for => "icon_delete", :style => "display:inline"}=t :delete_icon?
                    = link_to_toggle t(:change_icon), "#iconfield"
                    #iconfield{:style => "display: none"}
                      = f.file_field :icon, :label => false, :accept => "image/jpg,image/jpeg,image/png,image/gif", :class => "span12"
                  - else
                    = f.file_field :icon, :label => false, :size => 20, :accept => "image/jpg,image/jpeg,image/png,image/gif", :class => "span12"
          .accordion-group
            .accordion-heading
              %a.accordion-toggle{"data-parent" => "#guide_accordion", "data-toggle" => "collapse", :href => "#location"}
                %label
                  =t :location
              #location.accordion-body.collapse
                .accordion-inner
                  = f.text_field :place_id, :placeholder => t(:start_typing_place_name), :label => t(:site_name_place, :site_name => SITE_NAME)
                  .meta.stacked=t 'views.guides.edit.guide_place_desc', :site_name => SITE_NAME_SHORT
                  %label=t :coordinates
                  .stacked
                    = text_field_tag :map_search, "", :placeholder => t(:search_the_map), :class => "text"
                  #map.stacked
                  = f.text_field :latitude, :label => t(:latitude)
                  = f.text_field :longitude, :label => t(:longitude)
                  = f.hidden_field :map_type
                  = f.hidden_field :zoom_level
                  .meta.stacked=t 'views.guides.edit.coordinates_desc'
                  - if @place
                    = link_to t(:view_place), @place, :class => "readmore"
          .accordion-group
            .accordion-heading
              %a.accordion-toggle{"data-parent" => "#guide_accordion", "data-toggle" => "collapse", :href => "#license"}
                %label=t :license
              #license.accordion-body.collapse
                .accordion-inner
                  = f.select :license, Observation::LICENSE_CODES, :include_blank => "No license (all rights reserved)", :class => "span12", :label => false
                  .stacked
                    %a{:type => "button", :role => "button", "data-toggle" => "modal", "data-target" => "#licensing"}=t :about_licensing
          .accordion-group
            .accordion-heading
              %a.accordion-toggle{"data-parent" => "#guide_accordion", "data-toggle" => "collapse", :href => "#mobile"}
                %label=t :mobile
              #mobile.accordion-body.collapse
                .accordion-inner
                  = f.label :downloadable, :class => "checkbox" do
                    = f.check_box :downloadable, :label => false
                    = t(:enable_mobile_downloads)
                  =t 'views.guides.mobile_downloads_help_html'
        .actions
          - if @guide.published?
            = f.submit t(:save), :class => "btn btn-primary"
            = f.submit t(:unpublish), :class => "btn", :name => "unpublish"
          - else
            = f.submit t(:publish), :class => "btn btn-primary", :name => "publish"
            = f.submit t(:save), :class => "btn"
          = link_to t(:delete), @guide, :method => :delete, :confirm => t(:are_you_sure?), :class => "btn btn-danger pull-right"

    .span9
      #controls.clearfix.row-fluid{"data-spy" => "affix", "data-offset-top" => 148}
        .navbar.clearfix
          .pull-left
            %button#selectall.btn{:type => "button", :role => "button"}=t :select_all
            %button#selectnone.btn{:type => "button", :role => "button"}=t :select_none
            .btn-group
              %button#editbutton.btn.warning.dropdown-toggle{"data-toggle" => "dropdown"}
                =t :edit
                %span.caret
              %ul.dropdown-menu
                %li
                  = link_to "#addtags", "data-toggle" => "modal" do
                    %i.icon-tag
                    = t(:add_tags)
                %li
                  = link_to "#removetags", "data-toggle" => "modal" do
                    %i.icon-tag.strike
                    = t(:remove_tags)
                %li.divider
                %li
                  = link_to_function "<i class='icon-trash'></i> #{t(:remove_selected)}".html_safe, "removeSelected()"
                %li.divider
                %li
                  = link_to reorder_guide_path(@guide, :by => "taxonomy"), :method => :put, :confirm => "Are you sure? This will reload the page and cannot be undone." do
                    %i.icon-sort-by-attributes
                    = t(:reorder_by_taxonomy)
                %li= link_to t(:update_with_eol_content), "#eolupdate", "data-toggle" => "modal"
            %button.btn-primary.btn{:type => "button", :role => "button", "data-toggle" => "modal", "data-target" => "#addtaxa"}=t :add_taxa
          %form.navbar-search.pull-right
            %input{:type => "text", :placeholder => t(:search), :name => "q", :value => @q}
      #guide_taxa
        - if @guide_taxa.blank?
          .nocontent.alert
            %p=t :looks_like_no_species_in_guide
            %button.btn-primary.btn{:type => "button", :role => "button", "data-toggle" => "modal", "data-target" => "#addtaxa"}=t :add_some_now
        - else
          - for guide_taxon in @guide_taxa
            = render "guide_taxon_row", :guide_taxon => guide_taxon

#addtaxa.modal.fade.hide{:role => "dialog", "aria-labelledby" => "myModalLabel", "aria-hidden" => "true"}
  .modal-header
    %button.close{:type => "button", "data-dismiss" => "modal"} x
    %h3=t :add_taxa
  .modal-body
    %ul.nav.nav-pills
      %li.active= link_to t(:one_by_one), "#addtaxa-single", "data-toggle" => "pill"
      %li= link_to t(:from_place), "#addtaxa-place", "data-toggle" => "pill"
      %li= link_to t(:paste), "#addtaxa-paste", "data-toggle" => "pill"
      %li= link_to t(:from_eol_collection), "#addtaxa-eol", "data-toggle" => "pill"
    .tab-content
      #addtaxa-single.tab-pane.active.fade.in
      #addtaxa-place.tab-pane.fade
        .stacked
          %input.placechooser.chooser{:placeholder => t(:start_typing_place_name), :type => "text"}
        .stacked
          %input.taxonchooser.chooser{:placeholder => t(:start_typing_taxon_name), :type => "text"}
          %span.muted
            = surround '(', ')' do
              =t :optional
        .stacked
          %label=t :rank
          = select_tag :rank, options_for_select(Taxon::VISIBLE_RANKS.map{|r| [t(r, :default => r).downcase, r]}), :include_blank => true
          %span.muted
            = surround '(', ')' do
              =t :optional
        .stacked.status.muted=t :x_matching_taxa, :count => 0
        .muted=t 'views.guides.edit.places_note'
      #addtaxa-paste.tab-pane.fade
        .row-fluid
          %textarea.span12{:placeholder => "Paste in names"}
          .muted.status=t 'views.guides.edit.paste_note_html', :site_name => SITE_NAME_SHORT
      #addtaxa-eol.tab-pane.fade
        %p=t 'views.guides.edit.eol_collection_desc_html'
        %input{:type => "text", :name => "eol_collection_url", :placeholder => t(:eol_collection_url), :value => @guide.source_url.to_s =~ /eol\.org/ ? @guide.source_url : nil}
  .modal-footer
    %button.btn{"data-dismiss" => "modal"}=t :close
    %button.btn.btn-primary{:data => {:loading_click => t(:adding)}}=t :add_taxa

#licensing.modal.fade.hide{:role => "dialog", "aria-labelledby" => "myModalLabel", "aria-hidden" => "true"}
  .modal-header
    %button.close{:type => "button", "data-dismiss" => "modal"} x
    %h3=t :about_licenses
  .modal-body
    %p=t 'views.guides.edit.licensing_explanation'
    - for row in Observation::LICENSES.in_groups_of(2)
      .row-fluid
        - for code, name, description in row
          .row6
            %h4
              = image_tag("#{code}.png")
              = t(name)
            .stacked.description
              %p
                = t(description)
                = link_to t(:view_license), url_for_license(code), :class => "readmore", :target => "_blank"
#addtags.modal.fade.hide{:role => "dialog", "aria-labelledby" => "myModalLabel", "aria-hidden" => "true"}
  .modal-header
    %button.close{:type => "button", "data-dismiss" => "modal"} x
    %h3=t :add_tags
  .modal-body.row-fluid
    %p=t 'views.guides.tags_help_html'
    %input{:type => "text", :placeholder => t(:add_comma_separated_tags, :default => "Add comma-separated tags"), :class => "span11"}
    #recent_tags.quiet
      - for tag in @recent_tags
        = link_to_function "<i class='icon-plus-sign'></i> #{tag}".html_safe, "addTag('#{tag}')", :class => "btn btn-mini"
  .modal-footer
    %button.btn{"data-dismiss" => "modal"}=t :close
    %button.btn.btn-primary=t :add_tags
#removetags.modal.fade.hide{:role => "dialog", "aria-labelledby" => "myModalLabel", "aria-hidden" => "true"}
  .modal-header
    %button.close{:type => "button", "data-dismiss" => "modal"} x
    %h3=t :remove_tags
  .modal-body.row-fluid
    %input{:type => "text", :placeholder => t(:remove_comma_separated_tags, :default => "Remove comma-separated tags"), :class => "span11"}
  .modal-footer
    %button.btn{"data-dismiss" => "modal"}=t :close
    %button.btn.btn-primary=t :remove_tags
#eolupdate.modal.fade.hide{:role => "dialog", "aria-labelledby" => "myModalLabel", "aria-hidden" => "true"}
  .modal-header
    %button.close{:type => "button", "data-dismiss" => "modal"} x
    %h3=t :update_with_eol_content
  = form_for GuideEolUpdateFlowTask.new, :url => flow_tasks_url, :remote => true, :html => {'data-type' => 'json', :class => "unstacked"} do |f|
    .modal-body
      %p=t 'views.guides.edit.add_eol_content'
      .row-fluid
        = f.fields_for :options do |fo|
          .span4
            %h4=t :content_types
            = fo.fields_for :types do |ft|
              - %w(photos ranges sections).each do |tp|
                = fo.label tp, :class => "checkbox" do
                  = fo.check_box tp, :checked => true
                  =t tp
          .span8
            %h4=t :section_subjects
            %p=t 'views.guides.edit.eol_subjects_desc'
            .row-fluid
              .span4
                = fo.label :overview, :value => true, :class => "radio" do
                  = fo.radio_button :overview, true, :checked => true
                  =t :overview
              .span8
                = fo.label :overview, :value => false, :class => "radio" do
                  = fo.radio_button :overview, false
                  =t :choose_subjects
                #eol_subjects.hide{:style => "position:relative;"}
                  = fo.select :subjects, GuideSection::EOL_SUBJECTS.map{|s| [t(s.underscore, :default => s.titleize), s]}, {}, :multiple => true
          .span12
            %h4=t :other_options
            = fo.label :replace, :class => "checkbox" do
              = fo.check_box :replace, :checked => false
              =t :replace_existing_content
              .muted=t 'views.guides.edit.replace_existing_eol_desc'

    .modal-footer
      %button.btn{"data-dismiss" => "modal"}=t :close
      = f.submit t(:update_selected_taxa), :class => "btn btn-primary", :data => {:loading_click => t(:updating)}
      .meta.patience.hide=t 'views.guides.eolupdate_notice'
