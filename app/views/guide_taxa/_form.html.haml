- content_for :extrajs do
  = javascript_include_tag :cocoon
  = javascript_include_tag "jquery/plugins/inat/photo_selectors.js"
- content_for :extracss do
  = stylesheet_link_tag "guides"
  :css
    #guide_photos textarea {height:50px;}
    img.thumbnail {max-height: 200px;}
    #guide_photos .pull-left,
    #guide_sections .pull-left {margin-right: 10px;}
    #guide_photos .row-fluid,
    #guide_sections .row-fluid {cursor: move;}
    .photoSelector {margin-bottom:10px;}
    #guide_photos input.sortable-position { background-color: orange; }
    #guide_sections input.sortable-position { background-color: DodgerBlue; }
- content_for :extrajs do
  :javascript
    var GUIDE_TAXON = #{raw @guide_taxon.to_json}
    $('#guide_taxon_taxon_id:visible').chooser({
      collectionUrl: 'http://'+window.location.host + '/taxa/autocomplete.json',
      resourceUrl: 'http://'+window.location.host + '/taxa/{{id}}.json?partial=chooser',
    })
    $('#edit_photos_dialog').dialog({
      modal: true, 
      title: I18n.t('choose_photos_for_this_taxon'),
      autoOpen: false,
      width: 700,
      open: function( event, ui ) {
        $('#edit_photos_dialog').loadingShades('Loading...', {cssClass: 'smallloading'})
        $('#edit_photos_dialog').load('/guide_taxa/'+GUIDE_TAXON.id+'/edit_photos', function() {
          var photoSelectorOptions = {
            defaultQuery: GUIDE_TAXON.name,
            skipLocal: true,
            baseURL: '/flickr/photo_fields',
            urlParams: {
              authenticity_token: $('meta[name=csrf-token]').attr('content'),
              limit: 14
            },
            afterQueryPhotos: function(q, wrapper, options) {
              $(wrapper).imagesLoaded(function() {
                $('#edit_photos_dialog').centerDialog()
              })
            }
          }
          $('.tabs', this).tabs({
            show: function(event, ui) {
              if ($(ui.panel).attr('id') == 'flickr_taxon_photos' && !$(ui.panel).hasClass('loaded')) {
                $('.taxon_photos', ui.panel).photoSelector(photoSelectorOptions)
              } else if ($(ui.panel).attr('id') == 'inat_obs_taxon_photos' && !$(ui.panel).hasClass('loaded')) {
                $('.taxon_photos', ui.panel).photoSelector(
                  $.extend(true, {}, photoSelectorOptions, {baseURL: '/taxa/'+GUIDE_TAXON.id+'/observation_photos'})
                )
              } else if ($(ui.panel).attr('id') == 'eol_taxon_photos' && !$(ui.panel).hasClass('loaded')) {
                $('.taxon_photos', ui.panel).photoSelector(
                  $.extend(true, {}, photoSelectorOptions, {baseURL: '/eol/photo_fields'})
                )
              } else if ($(ui.panel).attr('id') == 'wikimedia_taxon_photos' && !$(ui.panel).hasClass('loaded')) {
                $('.taxon_photos', ui.panel).photoSelector(
                  $.extend(true, {}, photoSelectorOptions, {taxon_id: GUIDE_TAXON.id, baseURL: '/wikimedia_commons/photo_fields'})
                )
              }
              $(ui.panel).addClass('loaded')
              $('#edit_photos_dialog').centerDialog()
            }
          })
        })
      }
    })
    $('#import_sections_dialog').on('shown', function() {
      var current = $('.tab-pane:visible', this)
      if (current.hasClass('loaded')) {
        return
      }
      var provider = current.attr('id').split('_')[0]
      $.getJSON('/guide_sections/import?provider='+provider+'&q='+GUIDE_TAXON.name, function(json) {
        current.html('')
        $.each(json, function() {
          current.append(sectionToHtml(this))
        })
      })
      current.addClass('loaded')
    })
    function sectionToHtml(section) {
      var div = $('<div></div>')
      div.append(
        $('<a class="right btn">Import</a>').click(function() {addSection(section)})
      )
      div.append(
        $('<h3 class="title">'+section.title+'</h3>'),
        $('<div class="stacked lined description"></div>').html(section.description)
      )
      return div
    }
    function addSection(section) {
      $('#guide_sections_row .btn-add-section').click()
      $('.guide-section-fields:last .title_field input').val(section.title)
      $('.guide-section-fields:last .description_field textarea').val(section.description)
    }
    function updatePositions(container, sortable) {
      $selection = $(sortable+':visible', container)
      $selection.each(function() {
        $('input[name*="position"]', this).val($selection.index(this) + 1)
      })
    }
    $('#guide_photos').sortable({
      items: "> .row-fluid",
      cursor: "move",
      placeholder: 'row-fluid stacked sorttarget',
      update: function(event, ui) {
        updatePositions("#guide_photos", ".row-fluid")  
      }
    })
    $('#guide_photos').bind('cocoon:before-remove', function(e, item) {
      $(this).data('remove-timeout', 1000)
      $(item).slideUp(function() {
        updatePositions("#guide_photos", ".row-fluid")  
      })
    })
    $('#guide_sections').sortable({
      items: "> .row-fluid",
      cursor: "move",
      placeholder: 'row-fluid stacked sorttarget',
      update: function(event, ui) {
        updatePositions("#guide_sections", ".row-fluid")  
      }
    })
    $('#guide_sections').bind('cocoon:before-remove', function(e, item) {
      $(this).data('remove-timeout', 1000)
      $(item).slideUp(function() {
        updatePositions("#guide_sections", ".row-fluid")  
      })
    })
    $('#guide_sections').bind('cocoon:after-insert', function(e, item) {
      updatePositions("#guide_sections", ".row-fluid")  
    })


= form_for(@guide_taxon) do |f|
  = f.hidden_field :guide_id
  - if @guide_taxon.errors.any?
    #error_explanation
      %h2
        = pluralize(@guide_taxon.errors.count, "error")
        prohibited this guide_taxon from being saved:
      %ul
        - @guide_taxon.errors.full_messages.each do |msg|
          %li= msg
  .row-fluid
    .span4
      = f.label :display_name
      = f.text_field :display_name
    .span4
      = f.label :name
      = f.text_field :name
    .span4
      = f.label :taxon_id
      = f.text_field :taxon_id, :placeholder => "Starting typing taxon name..."
      - unless f.object.taxon_id.blank?
        .upstacked
          = link_to "View taxon", taxon_path(f.object.taxon_id), :target => "_blank", :class => "readmore"
  .row-fluid.stacked
    %h3 Photos
    #guide_photos.clearfix
      = f.fields_for :guide_photos, @guide_photos, :builder => ActionView::Helpers::FormBuilder do |gp|
        = render "guide_photo_fields", :f => gp
      / = link_to_add_association 'add photo', f, :guide_photos
    = link_to_function(t(:add_photos), "$('#edit_photos_dialog').dialog('open')", :class => 'btn btn-small btn-primary')
  #guide_sections_row.row-fluid.stacked
    %h3 Description Sections
    #guide_sections.clearfix
      = f.fields_for :guide_sections, @guide_sections, :builder => ActionView::Helpers::FormBuilder do |gs|
        = render "guide_section_fields", :f => gs
    = link_to_add_association 'Add section', f, :guide_sections, "data-association-insertion-method" => "append", "data-association-insertion-node" => "#guide_sections", :class => "btn btn-small btn-primary btn-add-section"
    / = link_to_function "Import sections", "$('#import_sections_dialog').dialog('open')", :class => "btn btn-small"
    %button.btn-small.btn{:type => "button", :role => "button", "data-toggle" => "modal", "data-target" => "#import_sections_dialog"} Import sections
  .row-fluid.stacked
    %h3 Ranges
    #guide_ranges
      = f.fields_for :guide_ranges do |gs|
        = render "guide_range_fields", :f => gs
      = link_to_add_association 'add range', f, :guide_ranges, "data-association-insertion-method" => "append"
      |
      / = link_to_function "Import ranges", "$('#import_ranges_dialog').dialog('open')"
  .actions
    = f.submit "Save", :class => "btn btn-primary"

#edit_photos_dialog.dialog
#import_sections_dialog.modal.fade.hide
  .modal-header
    %button.close{:type => "button", "data-dismiss" => "modal"} x
    %h3 Import Sections
  .modal-body
    %ul.nav.nav-tabs
      %li.active= link_to "EOL", "#eol_sections", "data-toggle" => "tab"
      %li= link_to "Wikipedia", "#wikipedia_sections", "data-toggle" => "tab"
    .tab-content
      #eol_sections.tab-pane.active.fade.in
        = loading
      #wikipedia_sections.tab-pane.fade
        = loading
