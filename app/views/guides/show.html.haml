= content_for :title do
  = @guide.title
= content_for :extracss do
  :css
    .tile .img { display:block;height:200px; text-align:center; background-color:#eee;position:relative;overflow:hidden;}
    #actions {margin-top:15px;}
    #actions .pull-right {margin-left: 5px;}
    .taxonmap {height: 200px;}
    .bootstrap .thumbnails > li, .thumbnails h5 {margin-bottom:0;}
    .thumbnails .small {line-height:1;}
    #attribution ul {margin-left:0;}
    #attribution li {display:inline; font-size:90%;}
    #attribution li:after {content: ', ';}
    #attribution li:last-child:after {content: '';}
    .bootstrap .nav-list {padding-left: 0;}
    .bootstrap .nav > li {position:relative;}
    #tags li  {padding-right:27px;}
    #tags .badge.modtag {
      display:none; 
      position:absolute; 
      right: 5px; 
      top:6px; 
      padding-left: 5px; 
      padding-right: 5px;
    }
    #tags .badge.modtag a {color:white; text-decoration: none;}
    #tags li:hover .badge.modtag {display:block;}
    #tags .addtag {background-color: #73AC13;}
    #nav .badge {position:relative; top:-2px;}
    #nav .taxon .othernames {display:block; color:#aaa;}
    #nav a .taxon:hover {
      color: inherit;
      text-decoration: none;
    }
= content_for :extrajs do
  = google_maps_js
  = javascript_include_tag "inaturalist/map3", "jquery/plugins/inat/taxonmap.js", 'jquery/plugins/waypoints.min'
  :javascript
    $('.tile .img').imagesLoaded(function() {
      $('img', this).not('.iconic').centerInContainer()
    })
    $('.clearbtn').click(function() {
      $(this).siblings(':input').val(null)
    })
    $('.taxonmap').waypoint(function() {
      if ($(this).data('taxonMap')) return
      $(this).taxonMap()
    }, {
      triggerOnce: true,
      offset: '100%'
    })
.container-fluid
  %ul.breadcrumb
    %li
      = link_to t(:guides), guides_path
      %span.divider /
      %li.active= @guide.title
  .row-fluid
    .span12
      #actions.right
        .btn-group.pull-right
          %button.btn.dropdown-toggle{"data-toggle" => "dropdown"}
            =t :pdf
            %span.caret
          %ul.dropdown-menu
            - for l in GuidesController::PDF_LAYOUTS
              %li= link_to t(l), guide_pdf_path(@guide, :layout => l), :target => "_blank"
        - if @guide.editable_by?(current_user)
          = link_to t(:edit), edit_guide_path(@guide), :class => "btn"
      %h1
        - if @guide.icon.file?
          = image_tag @guide.icon.url(:thumb), :class => "left img-rounded"
        = @guide.title
  .row-fluid
    .span12
      = truncate_with_more formatted_user_text(@guide.description), :length => 300
  .row-fluid
    #nav.span3
      %ul#tags.nav.nav-stacked.nav-pills
        %li{:class => @tags.blank? && @taxon.blank? ? "active" : nil}
          = link_to url_for_params(:without => [:page, :taxon, :tag, :tags]) do
            = t(:all)
            %span.badge.pull-right= @guide.guide_taxa.count
        - for predicate, tags in @nav_tags.sort_by{|p,t| p}
          %li.nav-header= predicate.humanize
          - for tag, value, count in tags.sort_by{|t,v,c| v}
            %li{:class => @tags.include?(tag) ? "active" : nil}
              = link_to url_for_params(:tags => [tag], :without => [:page]) do
                = value
                %span.badge.pull-right= count
              %span.badge.modtag{:class => @tags.include?(tag) ? "removetag" : "addtag"}
                - if @tags.include?(tag)
                  = link_to "x", url_for_params(:tags => (@tags - [tag]).flatten.uniq)
                - else
                  = link_to "+", url_for_params(:tags => [@tags, tag].flatten.uniq)
      %ul#taxonomy.nav.nav-stacked.nav-pills
        %li.nav-header=t :taxonomy
        - nav_taxa = capture do
          - for taxon in @nav_taxa
            %li
              = link_to url_for_params(:taxon => taxon.id, :without => [:page]) do
                = render "shared/taxon", :taxon => taxon, :include_parens => false
        - if @taxon
          - subnav_taxa = capture do
            %li.active
              = link_to url_for_params(:taxon => @taxon.id, :without => [:page]) do
                = render "shared/taxon", :taxon => @taxon, :include_parens => false
              %ul.nav.nav-stacked.nav-pills
                = nav_taxa
          - if @guide.taxon && !@guide.taxon.ancestor_ids.include?(@taxon.parent_id)
            %li.active
              = link_to url_for_params(:taxon => @taxon.parent_id, :without => [:page]) do
                &laquo;
                =t :back_to
                = render "shared/taxon", :taxon => @taxon.parent, :include_parens => false
              %ul.nav.nav-stacked.nav-pills
                = subnav_taxa
          - else
            = subnav_taxa
        - else
          = nav_taxa
    .span9
      .row-fluid.stacked
        .navbar
          .nabar-inner
            %form.navbar-search.pull-left
              .input-append
                %input{:type => "text", :placeholder => t(:search), :name => "q", :value => @q}
                - unless @q.blank?
                  %button.btn.clearbtn= t(:clear).capitalize
                %button.btn=t :search
            .btn-grp.pull-right{"data-toggle" => "buttons-radio"}
              = link_to t(:grid), url_for_params(:view => "grid"), :class => "btn #{'active' if @view == "grid"}"
              = link_to t(:card), url_for_params(:view => "card"), :class => "btn #{'active' if @view == "card"}"
      - if @view == "card"
        - for guide_taxon in @guide_taxa
          .card.row-fluid.stacked
            .span3
              = link_to guide_taxon, :class => "img" do
                - if gp = guide_taxon.default_guide_photo
                  = image_tag gp.photo.small_url
                - elsif guide_taxon.taxon
                  = taxon_image guide_taxon.taxon
            .span6
              %h4.name
                = link_to guide_taxon.display_name, guide_taxon
              - if gs = guide_taxon.guide_sections.first
                = truncate_with_more formatted_user_text(gs.description), :length => 400
            .span3
              .map
                - if guide_taxon.guide_ranges.blank?
                  .taxonmap{setup_map_tag_attrs(guide_taxon.taxon, :taxon_range => guide_taxon.taxon.taxon_ranges_without_geom.first, :place => @guide.place, :latitude => @guide.latitude, :longitude => @guide.longitude, :map_type => @guide.map_type, :zoom_level => @guide.zoom_level)}
                - else
                  = image_tag guide_taxon.guide_ranges.first.original_url
      - else
        - for row in @guide_taxa.in_groups_of(4)
          .row-fluid.stacked
            %ul.thumbnails
              - for guide_taxon in row.compact
                %li.span3
                  - if gp = guide_taxon.default_guide_photo
                    = link_to image_tag(gp.photo.small_url), guide_taxon, :class => "thumbnail borderless"
                  - elsif guide_taxon.taxon
                    = link_to taxon_image(guide_taxon.taxon), guide_taxon, :class => "thumbnail"
                  %h5
                    = link_to guide_taxon.display_name, guide_taxon
                    - if gp
                      = cite gp.attribution
        = will_paginate @guide_taxa
  #attribution.meta.upstacked
    %p
      =t :guide_compiled_by
      - if @guide.license.blank?
        = @guide.user.name.blank? ? @guide.user.login : @guide.user.name
      - else
        = succeed ',' do
          = @guide.user.name.blank? ? @guide.user.login : @guide.user.name
        =t 'copyright.some_rights_reserved'
        = surround '(', ')' do
          = @guide.license
    %p
      =t :photo_credits
      = references(:linked => true)
