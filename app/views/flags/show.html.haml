- content_for(:title) do
  - @title = "Flag for #{link_to(@object.to_plain_s, @object) rescue @object.to_plain_s}".html_safe
  = strip_tags @title

.container
  .row
    .col-xs-12
      .breadcrumbs
        %strong
          = link_to t(:back_to_flags_html), url_for_referrer_or_default( url_for( @flag.flaggable ) )
      %h2= @title
  .row
    .col-xs-12
      - if [Flag::SPAM, Flag::COPYRIGHT_INFRINGEMENT].include?( @flag.flag )
        .alert.alert-warning
          =t "views.flags.show.flags_that_should_not_be_resolved_desc_html"
      %table.table
        %thead
          %tr
            %th=t :created
            %th=t :object
            %th=t :flagger
            %th=t :reason
            %th=t :resolved_by
            %th=t :resolve_comment
        %tbody
          %tr
            %td=l @flag.created_at
            %td= link_to @object.to_plain_s, @object
            %td
              - if @flag.user
                = link_to @flag.user.login, @flag.user
              - else
                = @site.site_name_short
            %td=formatted_user_text @flag.flag
            %td
              - unless @flag.resolver.nil?
                = link_to @flag.resolver.login, @flag.resolver
              - else
                =t :not_resolved
            %td.nobr.form-inline
              - if is_curator?
                = form_for( @flag, action: "update", html: { class: "inlineblock" } ) do |f|
                  = f.text_field :comment, class: "form-control"
                  = f.hidden_field :resolver_id, value: current_user.id
                  = f.hidden_field :resolved, value: true
                  = f.submit t(:resolve), class: "btn btn-success"
              - else
                =formatted_user_text @flag.comment
              - if is_me?( @flag.user )
                = link_to @flag, class: "btn btn-link", data: { confirm: t(:you_sure_delete_flag?) }, method: :delete do
                  %i.fa.fa-trash
                  = t(:delete)
  .row
    .col-xs-7
      = render "comments/comments", parent: @flag
      - unless is_me?( @flag.user )
        .upstacked
          = render "subscriptions/subscription", resource: @flag

