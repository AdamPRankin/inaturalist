- content_for :extracss do
  = stylesheet_link_tag 'observations/_map'

- content_for :extrajs do
  = google_maps_js
  = javascript_include_tag "map_bundle"
  :javascript
    $(document).ready(function() {
      $("#map").taxonMap( );
      window.map = $("#map").data("taxonMap");

      // getting the coordinates from the URL and the site default BOUNDS
      // we want to use the site default unless there URL specifies something else
      google.maps.event.addListener(window.map, 'dragend', setUrlHashCoord);
      google.maps.event.addListener(window.map, 'zoom_changed', setUrlHashCoord);
      var coord = getUrlHashCoord();
      var BOUNDS = #{ raw CONFIG.bounds.to_json };
      if( window.location.search === "" && !coord.lat && !BOUNDS ) {
        coord = { lat: 10, lng: 20, zoom: 2 };
      }
      if (coord.lat) {
        setTimeout(function() {
          window.map.setCenter(new google.maps.LatLng(coord.lat,coord.lng));
          window.map.setZoom(coord.zoom);
        }, 100);
      } else if( BOUNDS ) {
        var bounds = new google.maps.LatLngBounds(
          new google.maps.LatLng(BOUNDS.swlat, BOUNDS.swlng),
          new google.maps.LatLng(BOUNDS.nelat, BOUNDS.nelng)
        )
        map.fitBounds(bounds)
      }
      
      // add the site logo to the bottom of the map
      var largeLogoURL = "#{ CONFIG.logo_large ? asset_path(CONFIG.logo_large) : nil }";
      if (largeLogoURL) {
        var logoLink = document.createElement("a");
        logoLink.style.padding = "5px";
        var logoImage = document.createElement("img");
        logoImage.src = largeLogoURL;
        logoImage.style.width = "200px";
        logoLink.appendChild(logoImage);
        $(logoLink).css("cursor", "pointer").click(function() {
          window.location = "#{ root_url }";
        });
        logoLink.index = 1;
        window.map.controls[google.maps.ControlPosition.BOTTOM_LEFT].push(logoLink);
      }
      
      // add the 'About this map' link
      var aboutDiv = document.createElement("div");
      aboutDiv.style.padding = "7px";
      aboutDiv.style.color = "white";
      aboutDiv.style["font-size"] = "14px";
      aboutDiv.innerHTML = "#{ I18n.t(:about_this_map) }";
      $(aboutDiv).css("cursor", "pointer").click(function() {
        window.location = "#{ @about_url }";
      });
      window.map.controls[google.maps.ControlPosition.BOTTOM_LEFT].push(aboutDiv);
      
      // add the Taxon label to the top of the map
      var taxon = #{ @taxon_hash.to_json };
      if( taxon && taxon.display_label ) {
        var taxonNameDiv = document.createElement("div");
        taxonNameDiv.style.padding = "5px";
        taxonNameDiv.style.color = "white";
        taxonNameDiv.style["font-size"] = "20px";
        taxonNameDiv.innerHTML = taxon.display_label;
        $(taxonNameDiv).css("cursor", "pointer").click(function() {
          window.location = "#{ taxon_url(@taxon) if @taxon }";
        });
        window.map.controls[google.maps.ControlPosition.TOP_CENTER].push(taxonNameDiv);
      }
    });
    function setUrlHashCoord() {
      var coords = window.map.getCenter(),
          x = preciseRound(coords.lng(), 3),
          y = preciseRound(coords.lat(), 3),
          z = window.map.getZoom();
      var baseUrl = window.location.href.split('#')[0];
      window.location.replace( baseUrl +'#' + [z,y,x].join('/') );
    }
    function getUrlHashCoord() {
      var bits = window.location.hash.split('/').map(function(x) { return parseFloat(x.replace(/[^0-9\-\.]/, ''))});
      return { lat: bits[1], lng: bits[2], zoom: bits[0] };
    }
#map.fullscreen{ setup_map_tag_attrs(                                                  |
  taxon_layers: @taxa.map{ |t|                                                         |
    { taxon: t, ranges: true, places: true, observations: true  }                      |
  },                                                                                   |
  place_layers: @places.map{ |p|                                                       |
    { place: p }                                                                       |
  },                                                                                   |
  enable_show_all_layer: (@taxa.empty? && @places.empty?) ? true : false,              |
  show_all_layer: (@taxa.empty? && @places.empty?) ? { grid_color: "#FF4500" } : true, |
  min_zoom: 2 )}                                                                       |
