- content_for :title do
  - if @observation.taxon
    = raw [@observation.taxon.common_name.try(:name), @observation.taxon.name].detect{|n| !n.blank?}
  - elsif !@observation.species_guess.blank?
    = @observation.species_guess
  - else
    = t(:something)
  = t(:observed_by).downcase
  = @observation.user.login
  - if @observation.time_observed_at && @coordinates_viewable
    = l @observation.time_observed_at, :format => :observed_at
  - if @observation.observed_on
    - date_format = @observation.observed_on.to_s(:long).split(" ")
    = t :on_
    = t("date_format.date_long.#{date_format.first.downcase}", day: date_format[1], year:date_format.last)
- content_for :extrahead do
  %meta{ name: "config:inaturalist_api_url", content: CONFIG.node_api_url }
  :javascript
    var RECENT_OBSERVATION_FIELDS = #{ logged_in? ? current_user.recent_observation_fields.to_json(
      only: [:id, :name, :description, :datatype, :allowed_values, :values_count]) : "[]" };
- content_for :extracss do
  - # needed for tooltips
  = stylesheet_link_tag "//maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css"
  = stylesheet_link_tag "https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css"
  = stylesheet_link_tag "observations/show2"
- content_for :extrajs do
  - if logged_in?
    - js_current_user = { id: current_user.id,
      login: current_user.login,
      curator_project_ids: current_user.project_users.curator_privilege.pluck(:project_id),
      icon_url: current_user.icon.file? ? current_user.icon.url(:medium) : nil,
      prefers_skip_coarer_id_modal: current_user.prefers_skip_coarer_id_modal,
      prefers_hide_obs_show_annotations: current_user.prefers_hide_obs_show_annotations,
      prefers_hide_obs_show_projects: current_user.prefers_hide_obs_show_projects,
      prefers_hide_obs_show_tags: current_user.prefers_hide_obs_show_tags,
      prefers_hide_obs_show_observation_fields: current_user.prefers_hide_obs_show_observation_fields,
      prefers_hide_obs_show_identifiers: current_user.prefers_hide_obs_show_identifiers,
      prefers_hide_obs_show_copyright: current_user.prefers_hide_obs_show_copyright,
      prefers_hide_obs_show_quality_metrics: current_user.prefers_hide_obs_show_quality_metrics,
      preferred_observation_license: (current_user.preferred_observation_license || "").downcase,
    }
  :javascript
    var INITIAL_OBSERVATION_ID = #{@observation.id};
    var CURRENT_USER = #{ js_current_user ? js_current_user.to_json : "{ }" };
    var SITE = {
      name: "#{@site.name}",
      short_name: "#{@site.site_name_short}",
      help_email: "#{@site.email_help}",
      logo_square: "#{@site.logo_square.url}",
      copyrighted_media_image_urls: {
        original: "#{image_url("copyright-infringement-original.png")}",
        large: "#{image_url("copyright-infringement-large.png")}",
        medium: "#{image_url("copyright-infringement-medium.png")}",
        small: "#{image_url("copyright-infringement-small.png")}",
        square: "#{image_url("copyright-infringement-square.png")}"
      },
      processing_image_urls: {
        small: "#{image_url(LocalPhoto.new.file.url(:small))}",
        square: "#{image_url(LocalPhoto.new.file.url(:square))}"
      }
    };
    var LIFE_TAXON = #{ Taxon::LIFE ? Taxon::LIFE.to_json(
      only: [ :id ], include: { default_name: { only: [ :name ] } } ) : "{ }" };
    var OUTLINK_SITE_ICONS = {
      "Atlas of Living Australia": "#{ asset_url( "sites/ala.png" ) }",
      "Calflora": "#{ asset_url( "sites/calflora.png" ) }",
      "GBIF": "#{ asset_url( "sites/gbif.png" ) }",
      "GloBI": "#{ asset_url( "sites/globi.png" ) }",
    };
  = javascript_include_tag "observations-show-webpack"

#app
  #initial-loading.text-center
    .loading_spinner
