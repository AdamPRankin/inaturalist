var inatTaxonMap = { };

(function($) {
  $.fn.taxonMap = function( options ) {
    options = options || { }
    $(this).each( function( ) {
      if ( options == 'fit' ) {
        inatTaxonMap.fit( this );
      } else {
        inatTaxonMap.setup( this, options );
      }
    });
  }
}(jQuery))

inatTaxonMap.setup = function ( elt, options ) {
  var options = $.extend( { }, options );
  options.latitude = options.latitude || $(elt).data('latitude');
  options.longitude = options.longitude || $(elt).data('longitude');
  options.mapType = $(elt).data('map-type');
  options.zoomLevel = parseInt( $(elt).data('zoom-level') );
  options.minZoom = parseInt( $(elt).data('min-zoom') );
  options.disableFullscreen = $(elt).data('disable-fullscreen');
  options.showRange = $(elt).data('show-range');
  options.minX = $(elt).data('min-x');
  options.minY = $(elt).data('min-y');
  options.maxX = $(elt).data('max-x');
  options.maxY = $(elt).data('max-y');
  options.flagLetters = $(elt).data('flag-letters');
  options.observations = options.observations || $(elt).data('observations');
  options.observationLayers = $(elt).data('observation-layers');
  options.placeLayers = $(elt).data('place-layers');
  options.taxonLayers = $(elt).data('taxon-layers');
  options.mapTypeControl = $(elt).data('map-type-control');
  options.enableShowAllLayer = $(elt).data('enable-show-all-layer');
  options.showAllLayer = options.showAllLayer || $(elt).data('show-all-layer') || true;
  options.featuredLayerLabel = options.featuredLayerLabel || $(elt).data('featured-layer-label');
  options.placeLayerLabel = options.placeLayerLabel || $(elt).data('place-layer-label');
  options.taxonRangeLayerLabel = options.taxonRangeLayerLabel || $(elt).data('taxon-range-layer-label');
  options.taxonPlacesLayerLabel = options.taxonPlacesLayerLabel || $(elt).data('taxon-places-layer-label');
  options.taxonObservationsLayerLabel = options.taxonObservationsLayerLabel || $(elt).data('taxon-observations-layer-label');
  options.allLayerLabel = options.allLayerLabel || $(elt).data('all-layer-label');
  options.allLayerDescription = options.allLayerDescription || $(elt).data('all-layer-description');
  options.gbifLayerLabel = options.gbifLayerLabel || $(elt).data('gbif-layer-label');
  // turn the observations JSON into proper JavaScript objects
  if( options.observations ) {
    options.observations = _.map( options.observations, function( observation ) {
      return jQuery.parseJSON( observation );
    });
  }
  if (options.zoomLevel === 0) {
    options.zoomLevel = null;
  }

  $(elt).data('taxonMapOptions', options)
  inatTaxonMap.setupGoogleMap( elt );
};

inatTaxonMap.fit = function( elt ) {
  inatTaxonMap.fitGoogle( elt );
};

inatTaxonMap.setupGoogleMap = function( elt ) {
  var options = $(elt).data('taxonMapOptions');
  var map = iNaturalist.Map.createMap( _.extend( options, {
        div: elt,
        mapTypeControl: (options.mapTypeControl !== false),
        minZoom: options.minZoom,
        disableFullscreen: options.disableFullscreen
      }));
  var preserveViewport = options.preserveViewport
  if (options.minX) {
    map.fitBounds(
      new google.maps.LatLngBounds(
        new google.maps.LatLng(options.minY, options.minX),
        new google.maps.LatLng(options.maxY, options.maxX)
      )
    )
    preserveViewport = true
  } else {
    if (options.latitude || options.longitude) {
      map.setCenter(new google.maps.LatLng(options.latitude || 0, options.longitude || 0))
    }
    if (options.zoomLevel) {
      map.setZoom(options.zoomLevel)
    }
  }
  // Set custom map type
  if (options.mapType) {
    map.setMapTypeId(options.mapType)
  }
  // Create the custom control (but don't show it yet)
  map._overlayControl = new iNaturalist.OverlayControl(map);
  // All Observations layer
  if( options.showAllLayer ) {
    if( ! _.isObject( options.showAllLayer ) ) {
      options.showAllLayer = { }
    }
    map.addObservationsLayer(_.defaults( options.showAllLayer, {
      title: options.allLayerLabel,
      description: options.allLayerDescription,
      disabled: options.enableShowAllLayer === false,
      ttl: 60 * 60 * 24  // 24 hours
    }));
  }
  // these are taxon ranges, listed_taxa places, and taxon-filtered observations
  inatTaxonMap.addTaxonLayers( map, options );
  // these are single place polygons
  inatTaxonMap.addPlaceLayers( map, options );
  // these are the grid/point observation layers
  inatTaxonMap.addObservationLayers( map, options );
  // these are the observations that need Google Maps-style flags
  inatTaxonMap.addObservationsToMap( map, options, preserveViewport);
  if( !preserveViewport ) {
    inatTaxonMap.fit( elt )
  }
  // Now apply the custom map to the element
  $(elt).data('taxonMap', map)
};

inatTaxonMap.addTaxonLayers = function( map, options ) {
  if( options.taxonLayers ) {
    _.each( options.taxonLayers, function( layer ) {
      if( layer.places ) {
        layerOptions = _.isObject( layer.places ) ?
          layer.places : { };
        map.addTaxonPlacesLayer( _.defaults( layerOptions, {
          taxon: layer.taxon,
          title: options.taxonPlacesLayerLabel
        }));
      }
      if( layer.ranges ) {
        layerOptions = _.isObject( layer.ranges ) ?
          layer.ranges : { };
        map.addTaxonRangeLayer( _.defaults( layerOptions, {
          taxon: layer.taxon,
          title: options.taxonRangeLayerLabel
        }));
      }
      if( layer.observations ) {
        layerOptions = _.isObject( layer.observations ) ?
          layer.observations : { };
        map.addObservationsLayer( _.defaults( layerOptions, {
          taxon: layer.taxon,
          title: options.taxonObservationsLayerLabel
        }));
      }
      if( layer.gbif && layer.taxon && layer.taxon.gbif_id ) {
        layerOptions = _.isObject( layer.gbif ) ?
          layer.gbif : { };
        map.addGBIFLayer( _.defaults( layerOptions, {
          taxon: layer.taxon,
          title: options.gbifLayerLabel
        }));
      }
    });
  }
};

inatTaxonMap.addPlaceLayers = function( map, options ) {
  if( options.placeLayers ) {
    _.each( options.placeLayers, function( layer ) {
      if( ! layer.place ) { return; }
      map.addPlaceLayer( _.defaults( _.clone( layer ), {
        title: layer.place.name,
        description: options.placeLayerLabel
      }));
    });
  }
};

inatTaxonMap.addObservationLayers = function( map, options ) {
  if( options.observationLayers ) {
    _.each( options.observationLayers, function( layer ) {
      map.addObservationsLayer( _.defaults( _.clone( layer ), {
        title: options.featuredLayerLabel
      }));
    });
  }
};

inatTaxonMap.addObservationsToMap = function( map, options, preserveViewport ) {
  if( !options.observations ) {
    return;
  }
  var letter_counter = 0;
  var letters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
  var obsIcon = iNaturalist.Map.createObservationIcon({color: "HotPink"});
  var newObsIcon = iNaturalist.Map.createObservationIcon({color: "DeepPink"});

  _.each(options.observations, function( o ) {
    var icon_div = $('#observation-'+ o.id +' .icon').get(0);
    if (!((o.latitude && o.longitude) || (o.private_latitude && o.private_longitude))) {
      if( options.appendMarkerToList ) {
        var icon_img = $('<img src="<%= asset_path("mapMarkers/questionmarker.png") %>"/>');
        $(icon_div).text('').append(icon_img);
        return;
      }
    }
    observationOptions = { clickable: options.clickable, showAccuracy: options.showAccuracy };
    if( options.flagLetters ) {
      observationOptions.icon = iNaturalist.Map.createObservationIcon({
        color: "HotPink",
        character: letters[ letter_counter ],
        stemless: o.coordinates_obscured
      });
    }
    map.addObservation(o, observationOptions);
    if (!o.map_scale && o.positional_accuracy) {
      var c = new google.maps.Circle({
        center: new google.maps.LatLng(o.latitude, o.longitude),
        radius: o.positional_accuracy * 10
      })
    }
    if( options.appendMarkerToList && o.marker) {
      var marker = o.marker;
      var src = o.marker.getIcon( );
      if (src.url) src = src.url;
      var icon_img = $('<img/>').attr('src', src).addClass('marker');
      $(icon_div).text('').append( icon_img );
      $(icon_img).click( function( ) {
        map.openInfoWindow.apply( o.marker );
      });
    }
    letter_counter++;
  });
  if( !preserveViewport ) {
    if( options.observations.length === 1 ) {
      o = options.observations[0];
      var center = new google.maps.LatLng(
        o.private_latitude || o.latitude,
        o.private_longitude || o.longitude);
      map.setCenter(center);
    } else {
      map.zoomToObservations();
    }
  }
};

inatTaxonMap.fitGoogle = function( elt ) {
  var options = $(elt).data('taxonMapOptions'),
      map = $(elt).data('taxonMap');
  if (!map) { return; }
  if (options.minX) {
    map.fitBounds(
      new google.maps.LatLngBounds(
        new google.maps.LatLng(options.minY, options.minX),
        new google.maps.LatLng(options.maxY, options.maxX)
      )
    );
    return;
  }
  map.setCenter(new google.maps.LatLng(0, 0));
  map.setZoom(1);
};
