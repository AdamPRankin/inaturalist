- content_for :title do
  = @title = t(:editing_this, :elem => @guide.title)
- content_for :extracss do
  = stylesheet_link_tag "guides"
  :css
    input.position {width:1em;}
    .more {display:none;}
    .guide_taxon .check, .guide_taxon .names {padding:4px 6px;}
    .names .display_name {font-size:140%;}
    .grip {margin-bottom:-4px;}
    .bootstrap form.edit_guide_taxon {margin-bottom:0;}
    .bootstrap .ctrl input {margin-bottom:0;}
    #addtaxa input {width:400px;}
    #addtaxa-single .ui-chooser {margin-bottom: 10px;}
    #controls .navbar .btn,
    #controls .navbar .navbar-search,
    #controls .navbar .btn-group {margin-top:0;}
    #controls .navbar .navbar-search input {margin-bottom:0;}
    #controls.affix {top:0px; z-index: 1;}
    #controls.affix .navbar {box-shadow: #777 7px 0 10px; padding:10px 0 10px 0; background-color:white;}
    #controls .pull-left {margin-right:10px;}
    .guide_taxon.warning { background-color: #fcf8e3;}
    .guide_taxon {margin-bottom:0;padding-top:10px;}
    .sorttarget { height: 50px;}
    #map { height: 200px;}
    .bootstrap select, .bootstrap input[type="file"] {line-height: 0;}
    #guide_description {height:300px;}
- content_for :extrajs do
  :javascript
    var GUIDE = #{raw @guide.to_json},
        PLACE = #{raw @guide.place.to_json}
  = javascript_include_tag 'jquery/plugins/jquery.labelize', 'jquery/plugins/jquery.latLonSelector', 'guides/edit'
.container-fluid
  %ul.breadcrumb
    %li
      = link_to t(:back_to_x, :noun => @guide.title), @guide, :class => "back"

  %h1= @title

  .row-fluid
    .span3
      = form_for @guide, :builder => DefaultFormBuilder do |f|
        #guide_accordion.accordion
          .accordion-group
            .accordion-heading
              %a.accordion-toggle{"data-parent" => "#guide_accordion", "data-toggle" => "collapse", :href => "#title_and_desc"}
                %label=t :title_and_description
              #title_and_desc.accordion-body.collapse.in
                .accordion-inner
                  = f.text_field :title, :placeholder => t(:title), :class => "span12", :label => false
                  = f.text_area :description, :placeholder => t(:description), :class => "span12", :label => false
          .accordion-group
            .accordion-heading
              %a.accordion-toggle{"data-parent" => "#guide_accordion", "data-toggle" => "collapse", :href => "#icon"}
                %label=t :icon
              #icon.accordion-body.collapse
                .accordion-inner
                  - if @guide.icon.file?
                    = image_tag(@guide.icon.url(:thumb), :class => "left")
                    %div
                      = check_box_tag :icon_delete
                      %label{:for => "icon_delete", :style => "display:inline"}=t :delete_icon?
                    = link_to_toggle t(:change_icon), "#iconfield"
                    #iconfield{:style => "display: none"}
                      = f.file_field :icon, :label => false, :accept => "image/jpg,image/jpeg,image/png,image/gif", :class => "span12"
                  - else
                    = f.file_field :icon, :label => false, :size => 20, :accept => "image/jpg,image/jpeg,image/png,image/gif", :class => "span12"
          .accordion-group
            .accordion-heading
              %a.accordion-toggle{"data-parent" => "#guide_accordion", "data-toggle" => "collapse", :href => "#location"}
                %label=t :location
              #location.accordion-body.collapse
                .accordion-inner
                  = f.text_field :place_id, :placeholder => t(:start_typing_place_name), :label => t(:site_name_place, :site_name => SITE_NAME)
                  .stacked
                    = text_field_tag :map_search, "", :placeholder => t(:search_the_map), :class => "text"
                  #map.stacked
                  = f.text_field :latitude, :label => t(:latitude)
                  = f.text_field :longitude, :label => t(:longitude)
                  = f.select :map_type, Project::MAP_TYPES.map{|type| [t("#{type}", :default => type).downcase, type]}
                  = f.text_field :zoom_level
                  - if @place
                    = link_to t(:view_place), @place, :class => "readmore"
          .accordion-group
            .accordion-heading
              %a.accordion-toggle{"data-parent" => "#guide_accordion", "data-toggle" => "collapse", :href => "#license"}
                %label=t :license
              #license.accordion-body.collapse
                .accordion-inner
                  = f.select :license, Observation::LICENSE_CODES, :include_blank => "No license (all rights reserved)", :class => "span12", :label => false
                  .stacked
                    %a{:type => "button", :role => "button", "data-toggle" => "modal", "data-target" => "#licensing"}=t :about_licensing
        / %h3 Navigation
        / - for opt in @nav_options
        /   = check_box_tag opt
        .actions
          = f.submit t(:save_guide), :class => "btn btn-primary"
          = link_to t(:delete), @guide, :method => :delete, :confirm => t(:are_you_sure?), :class => "btn btn-danger pull-right"

    .span9
      #controls.clearfix.row-fluid{"data-spy" => "affix", "data-offset-top" => 148}
        .navbar.clearfix
          .pull-left
            .btn-group
              %button#editbutton.disabled.btn.warning.dropdown-toggle{"data-toggle" => "dropdown"}
                =t :edit
                %span.caret
              %ul.dropdown-menu
                %li= link_to_function t(:remove_selected), "removeSelected()"
            %button#selectall.btn{:type => "button", :role => "button"}=t :select_all
            %button#selectnone.btn{:type => "button", :role => "button"}=t :select_none
            %button.btn-primary.btn{:type => "button", :role => "button", "data-toggle" => "modal", "data-target" => "#addtaxa"}=t :add_taxa
          %form.navbar-search
            %input{:type => "text", :placeholder => t(:search), :name => "q", :value => @q}
      #guide_taxa
        - if @guide_taxa.blank?
          .nocontent.alert
            %p=t :looks_like_no_species_in_guide
            %button.btn-primary.btn{:type => "button", :role => "button", "data-toggle" => "modal", "data-target" => "#addtaxa"}=t :add_some_now
        - else
          - for guide_taxon in @guide_taxa
            = render "guide_taxon_row", :guide_taxon => guide_taxon

#addtaxa.modal.fade.hide{:role => "dialog", "aria-labelledby" => "myModalLabel", "aria-hidden" => "true"}
  .modal-header
    %button.close{:type => "button", "data-dismiss" => "modal"} x
    %h3=t :add_taxa
  .modal-body
    %ul.nav.nav-pills
      %li.active= link_to t(:one_by_one), "#addtaxa-single", "data-toggle" => "pill"
      %li= link_to t(:from_place), "#addtaxa-place", "data-toggle" => "pill"
    .tab-content
      #addtaxa-single.tab-pane.active.fade.in
      #addtaxa-place.tab-pane.fade
        .stacked
          %input.placechooser.chooser{:placeholder => t(:start_typing_place_name)}
        .stacked
          %input.taxonchooser.chooser{:placeholder => t(:start_typing_taxon_name)}
          %span.muted
            = surround '(', ')' do
              =t :optional
        .stacked.status.muted=t :x_matching_taxa, :count => 0
        .muted=t 'views.guides.edit.places_note'
  .modal-footer
    %button.btn{"data-dismiss" => "modal"}=t :close
    %button.btn.btn-primary=t :add_taxa

#licensing.modal.fade.hide{:role => "dialog", "aria-labelledby" => "myModalLabel", "aria-hidden" => "true"}
  .modal-header
    %button.close{:type => "button", "data-dismiss" => "modal"} x
    %h3=t :about_licenses
  .modal-body
    %p=t 'views.guides.edit.licensing_explanation'
    - for row in Observation::LICENSES.in_groups_of(2)
      .row-fluid
        - for code, name, description in row
          .row6
            %h4
              = image_tag("#{code}.png")
              = t(name)
            .stacked.description
              %p
                = t(description)
                = link_to t(:view_license), url_for_license(code), :class => "readmore", :target => "_blank"
