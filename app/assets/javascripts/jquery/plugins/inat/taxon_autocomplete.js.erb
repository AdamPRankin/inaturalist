var ICONIC_TAXA = <%= Hash[Taxon::ICONIC_TAXA.map{ |t|
  [ t.id, { name: t.name, icon: asset_path("assets/iconic_taxa/#{ t.name.downcase }-75px.png") } ] }].to_json %>;
var UNKNOWN_TAXON_ICON = "<%= asset_path('assets/iconic_taxa/unknown-75px.png') %>";

function capitalize( s ) {
  return s[0].toUpperCase( ) + s.slice( 1 );
}

function autocompleteTemplate( result ) {
  var template = "<div class='ac' data-taxon-id='"+ result.id +"'><div class='ac-thumb'>";
  result.default_photo_url = result.default_photo_url;
  if( !result.default_photo_url ) {
    if( ICONIC_TAXA[ result.iconic_taxon_id ] ) {
      result.default_photo_url = ICONIC_TAXA[ result.iconic_taxon_id ].icon;
    } else {
      result.default_photo_url = UNKNOWN_TAXON_ICON;
    }
  }
  template += "<img src='"+ result.default_photo_url +"'>";
  template += "</div><div class='ac-label'><span class='title'>";
  var name;
  var subtitle;
  _.each( result.names, function( n ) {
    if( n.locale === I18n.locale ) {
      if( name ) { return; }
      name = n.name;
    }
  });
  if( !name ) {
    _.each( result.names, function( n ) {
      if( n.locale === "en" ) {
        if( name ) { return; }
        name = n.name;
      }
    });
  }
  if( name && result.rank_level <= 10 ) {
    subtitle = "<i>" + result.name + "</i>";
  } else if( result.ancestor_name && result.rank_level < 70) {
    subtitle = capitalize(result.ancestor_rank) + " " + result.ancestor_name;
  }
  result.best_name = name || result.name;
  template += result.best_name;
  template += "</span><span class='subtitle'>";
  template += subtitle || capitalize(result.rank);
  template += "</span></div>";
  template += "<a href='http://www.inaturalist.org/taxa/"+ result.id +"' target='_blank'><div class='ac-view'>View</div></a></div>";
  return template;
};

$.fn.taxonAutocomplete = function() {
  var field = this;
  var photo_url = field.data("default-photo-url");
  if( !photo_url ) {
    if( ICONIC_TAXA[ field.data("iconic-taxon-id") ] ) {
      photo_url = ICONIC_TAXA[ field.data("iconic-taxon-id") ].icon;
    } else {
      photo_url = UNKNOWN_TAXON_ICON;
    }
  }
  field.parent().prepend($("<div class='ac-select-thumb'></div>").
    append("<img src='"+ photo_url +"'></img>"));
  field.on('search', function () {
    $(this).val( "" );
    $("#taxon_id").val( null );
    $(".ac-select-thumb img").attr( "src", UNKNOWN_TAXON_ICON );
    return false;
  });
  var ac = field.autocomplete({
    source: function( request, response ) {
      $.ajax({
        url: "<%= CONFIG.node_api_host %>/taxa/autocomplete?per_page=10",
        dataType: "jsonp",
        data: {
          q: request.term
        },
        success: function( data ) {
          response( data.results );
        }
      });
    },
    minLength: 2,
    delay: 50,
    select: function( event, ui ) {
      if( event.toElement && $(event.toElement).hasClass( "ac-view" ) ) {
        return false;
      }
      field.val( ui.item.best_name || ui.item.name );
      field.blur( );
      $("#taxon_id").val( ui.item.id );
      $(".ac-select-thumb img").attr( "src", ui.item.default_photo_url );
      return false;
    },
    focus: function( event, ui ) {
      var li = $("ul").find("[data-taxon-id='"+ ui.item.id +"']").closest("li");
      li.parent( ).find( "li" ).removeClass( "active" );
      li.addClass( "active" );
      return false;
    }
  }).data( "autocomplete" );
  // mostly standard _move
  ac._move = function( direction, event ) {
    if ( !this.menu.element.is( ":visible" ) ) {
      this.search( null, event );
      return;
    }
    // preventing scrolling past top or bottom
    if ( this.menu.isFirstItem() && /^previous/.test( direction ) ||
        this.menu.isLastItem() && /^next/.test( direction ) ) {
      return;
    }
    this.menu[ direction ]( event );
  };
  ac._renderItem = function( ul, item ) {
    return $( "<li class='ac-result'></li>" ).data("item.autocomplete", item).
      append( autocompleteTemplate( item )).
      appendTo( ul );
  };
  ac._renderMenu = function( ul, items ) {
    var that = this;
    ul.removeClass("ui-corner-all").removeClass("ui-menu");
    ul.addClass("ac-menu");
    $.each( items, function( index, item ) {
      that._renderItemData( ul, item );
    });
  };
  field.keydown(function(e) {
    var key = e.keyCode || e.which;
    // cancel any return key action in the text field
    if(key === 13) { return false; }
    // the arrow keys are harmless
    if(key === 37 || key === 38 || key === 39 || key === 40) { return; }
    $("#taxon_id").val( null );
    $(".ac-select-thumb img").attr( "src", UNKNOWN_TAXON_ICON );
  });
  // show the results anytime the text field gains focus
  field.bind( "focus", function( ) {
    $(this).autocomplete('search', $(this).val( ));
  });
};
