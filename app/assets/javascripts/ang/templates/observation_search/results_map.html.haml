#obs-container{:class => "{{ fullscreen ? 'fullscreen-enabled' : '' }}"}
  #map{ enable_show_all_layer: 'false', :class => "{{ fullscreen ? 'fullscreen' : '' }}"}
  .container.container-fixed
    #maprow.row
      #map-controls
        .btn-group-vertical.btn-group.btn-group-stateless.clearfix
          %button.btn.btn-default{ "ng-click": "zoomIn( )", title: "{{ shared.t('zoom_in') }}" }
            %i.glyphicon.glyphicon-plus
          %button.btn.btn-default{ "ng-click": "zoomOut( )", title: "{{ shared.t('zoom_out') }}" }
            %i.glyphicon.glyphicon-minus
        #user-location-control.btn-group.btn-group-stateless.clearfix
          %button.btn.btn-default{ "ng-click": "findUserLocation( )", title: "{{ shared.t('find_your_current_location') }}" }
            %i.glyphicon.glyphicon-record
        #user-location-full-screen.btn-group.btn-group-stateless.clearfix
          %button.btn.btn-default{ "ng-click": "togglFullscreen( )", title: "{{ shared.t('full_screen') }}" }
            %i{ :class => "glyphicon glyphicon-resize-{{ fullscreen ? 'small' : 'full' }}" }
      #map-legend-control
        .btn-group.dropup
          %button.btn.btn-default.dropdown-toggle{data: {toggle: 'dropdown'}}
            {{ shared.t('map_legend') | capitalize:'title' }}
            %span.caret
          .dropdown-menu
            #map-legend-container
      .col-xs-4.col-xs-offset-8
        #obs
          .div{ "infinite-scroll": "showMoreObservations( )", "infinite-scroll-disabled": "!viewing('observations', 'map') || busy", "infinite-scroll-parent": "true", "infinite-scroll-distance": 0 }
            .media.observation{ "ng-repeat": "o in observations" }
              .media-left
                %a{ href: "/observations/{{ o.id }}", target: "_self" }
                  .media-object{style: "background-image: url({{ o.photo( ) }})"}
              .media-body
                %a.userimage.pull-right{ href: "/people/{{ o.user.login }}", "ng-style": "{{!!o.user.icon_url}} && { 'background-image': \"url('{{ o.user.icon_url }}')\" }", title: "{{ o.user.login }}" }
                  %i.icon-person{"ng-hide" => "o.user.icon_url"}
                %inat-taxon.split-taxon{taxon: "o.taxon", url: "/observations/{{ o.id }}"}
                .dateloc
                  %span.location{title: "{{ o.displayPlace() }}"}
                    .hidden-lg {{ o.displayPlace() | characters:6:true }}
                    .visible-lg-inline-block {{ o.displayPlace() | characters:18:true }}
                  %span.date{ title: "{{ shared.t('observed_on') }} {{ o.observed_on }}" }
                    %span.hidden-lg {{ (o.observed_on | amDateFormat : 'l') || shared.t('unknown') }}
                    %span.visible-lg-inline-block {{ (o.observed_on | amDateFormat : 'll') || shared.t('unknown') }}
                .meta.ng-cloak
                  %span{:class => "quality_grade {{ o.quality_grade }}"}
                    {{ shared.t( o.quality_grade ) | capitalize }}
                  %span.identifications{"ng-show" => "o.identifications_count > 0", title: "{{ shared.t('x_identifications', {count: o.identifications_count}) }}" }
                    %i.icon-identification
                    {{ o.identifications_count }}
                  %span.comments{"ng-show" => "o.comments_count > 0", title: "{{ shared.t('x_comments', {count: o.comments_count}) }}"}
                    %i.icon-chatbubble
                    {{ o.comments_count }}
                  %span.favorites{"ng-show" => "o.faves_count > 0", title: "{{ shared.t('x_faves', {count: o.faves_count}) }}"}
                    %i.fa.fa-star
                    {{ o.faves_count }}
                  %span.created_at.pull-right{"am-time-ago" => "o.created_at", title: "{{ shared.t('added_on') }} {{ o.created_at }}"}
